[gd_scene load_steps=6 format=3 uid="uid://i6f62k4ygwl0"]

[sub_resource type="GDScript" id="GDScript_sr8o7"]
script/source = "extends Node2D

\"\"\"
ONLY ONE EFFECT
For complex effects, chain them together
\"\"\"

@onready var triggers : = $Triggers
@onready var targets_node : = $Targets
@onready var order : = $Order
@onready var resolution : = $Resolution


var target_delay : = 0.0
var lifetime : = 5.0

func _ready():
	top_level = true
	global_position = get_parent().global_position

func _physics_process(delta):
	if is_triggered():
		$DebugDraw/Polygon2D.color = Color.BLUE
		var targets : = get_targets()
		targets = order_targets(targets)
		resolve(targets)
		call_deferred(\"free\")

func is_triggered() -> bool:
	for trigger in triggers.get_children():
		if trigger.is_active() == false:
			return false
	return true
	
func get_targets() -> Array:
	var results : = []
	for child in targets_node.get_children():
		if child is Area2D:
			print(child.get_overlapping_bodies())
			for body in child.get_overlapping_bodies():
				var target : = AITarget2D.new()
				target.entity = body
				results.append(target)
		else:
			var target : = AITarget2D.new()
			target.position = child.position
			results.append(target)
	return results
	
func order_targets(targets : Array) -> Array:
	for child in order.get_children():
		targets = child.order(targets)
	return targets
	
func resolve(targets : Array, target_delay : = 0.0) -> void:
	for target in targets:
		for effect in resolution.get_children():
			effect.activate(target.get_entity(), target.get_pos())
			await get_tree().create_timer(target_delay).timeout
"

[sub_resource type="GDScript" id="GDScript_oik13"]
script/source = "extends Node2D

func _ready():
	$Timer.start()

func is_active():
	return $Timer.is_stopped()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_47ehl"]
size = Vector2(64, 64)

[sub_resource type="GDScript" id="GDScript_sx85y"]
script/source = "extends Node2D

func order(targets : Array) -> Array:
	var results : = []
	for target in targets:
		if target is CharacterBody2D:
			results.append(target)
	return results
"

[sub_resource type="GDScript" id="GDScript_8v5jj"]
script/source = "extends Node2D

func activate(entity : Object, pos : Vector2):
	if entity.has_meta(\"damage\"):
		entity.damage(1.0)
		print_debug(entity.name + \" hit\")
"

[node name="AbilityBase" type="Node2D"]
script = SubResource("GDScript_sr8o7")

[node name="DebugDraw" type="Node2D" parent="."]

[node name="Polygon2D" type="Polygon2D" parent="DebugDraw"]
color = Color(1, 0, 1, 1)
polygon = PackedVector2Array(-32, -32, 32, -32, 32, 32, -32, 32)

[node name="Triggers" type="Node2D" parent="."]

[node name="Timer" type="Node2D" parent="Triggers"]
script = SubResource("GDScript_oik13")

[node name="Timer" type="Timer" parent="Triggers/Timer"]
wait_time = 3.0
one_shot = true

[node name="Targets" type="Node2D" parent="."]

[node name="Area2D" type="Area2D" parent="Targets"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Targets/Area2D"]
shape = SubResource("RectangleShape2D_47ehl")

[node name="Order" type="Node2D" parent="."]

[node name="EntitiesOnly" type="Node2D" parent="Order"]
script = SubResource("GDScript_sx85y")

[node name="Resolution" type="Node2D" parent="."]

[node name="Damage" type="Node2D" parent="Resolution"]
script = SubResource("GDScript_8v5jj")
