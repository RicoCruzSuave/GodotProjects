[gd_scene load_steps=16 format=3 uid="uid://d2vaf2s7fg3u1"]

[ext_resource type="Script" path="res://Util/Managers/TeamManager.gd" id="1_kfjuw"]
[ext_resource type="Texture2D" uid="uid://ds805iltnvi5k" path="res://Engines/LaneWar/Assets/KenneyScribblePlatformer/Default/character_roundRed.png" id="1_lk1by"]
[ext_resource type="Texture2D" uid="uid://dv5wju4rg4ni1" path="res://Engines/LaneWar/Assets/KenneyScribblePlatformer/Default/character_roundYellow.png" id="2_b7e2c"]
[ext_resource type="Script" path="res://Util/CommandsUI.gd" id="3_0wwxe"]

[sub_resource type="GDScript" id="GDScript_kko83"]
script/source = "extends Node2D
##Provides logic for executing actions

@export_node_path(\"Node2D\") var team_manager_path
@export_node_path(\"Node2D\") var actions_list_path
@export_node_path(\"ProgressBar\") var timer_ui_path

@onready var team_manager : = get_node(team_manager_path)
@onready var actions_list : = get_node(actions_list_path)
@onready var timer_ui : ProgressBar = get_node(timer_ui_path)

##TODO: Needs reference to team manager, actions list, and a button hookup

var timer : = Timer.new()
var planning_phase : = false
var actions : = []
var action_index : = 0

func _ready():
	timer.autostart = true
	add_child(timer)
	
	#timer.connect(\"timeout\", team_manager.next_team)
	#Engine.time_scale = 0.3
	#set_real_time(5)
	timer.connect(\"timeout\", switch_phase)
	switch_phase()
	
	for child in actions_list.get_children():
		actions.append(child)
	
func _process(delta):
	timer_ui.value = timer.time_left / timer.wait_time
	
func _input(event):
	if planning_phase:
		if Input.is_action_just_pressed(\"ui_accept\"):
			timer.stop()
			timer.emit_signal(\"timeout\")
			timer.start()
			
func call_command(command_name : String):
	var speed : = 1000
	var radius : = 36
	var command : Command2D = get_child_by_name(command_name, actions_list)
	command.prepare([
		team_manager.get_active_member().global_position, 
		get_global_mouse_position(), 
		1000, 
		36
	])
	
func switch_phase():
	planning_phase = !planning_phase
	if planning_phase:
		Engine.time_scale = 0.0001
		set_real_time(15)
	else:
		Engine.time_scale = 1.0
		set_real_time(0.5)
		team_manager.next_team()
	
func set_real_time(time : float):
	timer.wait_time = time * Engine.time_scale
	timer.start()
	
func get_child_by_name(child_name : String, parent_node : = self) -> Node:
	for child in parent_node.get_children():
		if child.name == child_name:
			return child
	return null
"

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_bouuv"]
width = 100
height = 20

[sub_resource type="RectangleShape2D" id="RectangleShape2D_5208o"]
size = Vector2(100, 20)

[sub_resource type="CircleShape2D" id="CircleShape2D_qaeqd"]
radius = 25.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_4ijq5"]
size = Vector2(100, 20)

[sub_resource type="CircleShape2D" id="CircleShape2D_6flcf"]
radius = 25.0

[sub_resource type="GDScript" id="GDScript_otvvk"]
script/source = "extends Command2D
class_name ProjectileCommand2D

@export var draw_res : = 10
@export_node_path(\"Node2D\") var team_manager_path
@export_node_path(\"Node2D\") var projectile_path

@onready var team_manager : = get_node(team_manager_path)
@onready var projectile : = get_node(projectile_path)

var start_pos 
var target_pos 
var speed 
var radius 


var drawing_enabled : = false
	
## Inputs: start_pos, target_pos, speed, radius
func prepare(variant : Variant = null):
	if variant:
		start_pos = variant[0]
		target_pos = variant[1]
		speed = variant[2]
		radius = variant[3]
		
	if not can_do():
		return
	running = true
	drawing_enabled = true
	
func _process(delta):
	if running:
		run()
		if drawing_enabled:
			queue_redraw()
	
func _draw():
	if start_pos != null and target_pos != null:
		var current_pos : Vector2 = start_pos 
		var total_dist : float = start_pos.distance_to(target_pos)
		var direction : Vector2 = start_pos.direction_to(target_pos)
		for i in range(draw_res):
			var incremental_dist : = (total_dist / draw_res)
			draw_line(
				current_pos, 
				current_pos + (direction * incremental_dist), 
				Color.MEDIUM_VIOLET_RED, 
				2.0
			)
			current_pos += direction * incremental_dist

func _unhandled_input(event):
	if running:
		if Input.is_action_just_pressed(\"left_click\"):
			drawing_enabled = false
			prepared = true
			running = true
			#run([
				#team_manager.get_active_member().global_position, 
				#get_global_mouse_position(), 
				#1000, 
				#36
			#])

func run():
	super.run()
	if not prepared:
		prepare(null)
		return
	
	var dir_to_target : Vector2 = start_pos.direction_to(target_pos)
	
	var new_ball : Node2D = projectile.duplicate()
	add_child(new_ball)
	new_ball.set_process(true)
	if new_ball is RigidBody2D:
		new_ball.sleeping = false
	
	new_ball.global_position = start_pos + (dir_to_target * radius)
	new_ball.apply_central_impulse(dir_to_target * speed)
	
	completed = true
	if is_completed():
		emit_signal(\"command_done\")
		reset()

func can_do():
	if start_pos == null:
		return false
	if target_pos == null:
		return false
	if speed == null:
		return false
	if radius == null:
		return false
	return true
	
func reset():
	super.reset()
	start_pos = null
	target_pos = null
	speed = null
	radius = null
"

[sub_resource type="GDScript" id="GDScript_gs4hj"]
script/source = "extends RigidBody2D

@export var size : = 10.0
@export var decay_rate : = 5.0

func _ready():
	set_process(false)

func _process(delta):
	
	if not $VisibleOnScreenEnabler2D.is_on_screen():
		free()
		
	size -= delta * decay_rate
	if size <= 0.0:
		free()
	#mass = size * 10.0
	$CollisionShape2D.shape.radius = size
	$Sprite2D.scale = Vector2(size/10.0, size/10.0)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_rwfrv"]

[sub_resource type="Gradient" id="Gradient_q1t04"]
interpolation_mode = 1
colors = PackedColorArray(0, 0, 0, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_vjx8b"]
gradient = SubResource("Gradient_q1t04")
width = 32
height = 32
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.8, 0.4)
metadata/_snap_enabled = true

[node name="ProjectileTest" type="Node2D"]

[node name="ActionManager" type="Node2D" parent="."]
script = SubResource("GDScript_kko83")
team_manager_path = NodePath("../TeamManager")
actions_list_path = NodePath("../Projectiles")
timer_ui_path = NodePath("../UI/VBoxContainer/CenterContainer/ProgressBar")

[node name="TeamManager" type="Node2D" parent="."]
script = ExtResource("1_kfjuw")
teams_array = Array[NodePath]([NodePath("../LeftSide/LeftTeam"), NodePath("../RightSide/RightTeam")])

[node name="LeftSide" type="Node2D" parent="."]
position = Vector2(300, 650)

[node name="Raft" type="Node2D" parent="LeftSide"]

[node name="Base" type="StaticBody2D" parent="LeftSide/Raft"]

[node name="Sprite2D" type="Sprite2D" parent="LeftSide/Raft/Base"]
texture = SubResource("NoiseTexture2D_bouuv")

[node name="CollisionShape2D" type="CollisionShape2D" parent="LeftSide/Raft/Base"]
shape = SubResource("RectangleShape2D_5208o")

[node name="LeftTeam" type="Node2D" parent="LeftSide"]

[node name="TestBody" type="RigidBody2D" parent="LeftSide/LeftTeam"]
position = Vector2(0, -44)
mass = 100.0
linear_damp = 3.0

[node name="Sprite2D" type="Sprite2D" parent="LeftSide/LeftTeam/TestBody"]
texture = ExtResource("1_lk1by")

[node name="CollisionShape2D" type="CollisionShape2D" parent="LeftSide/LeftTeam/TestBody"]
shape = SubResource("CircleShape2D_qaeqd")
debug_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="RightSide" type="Node2D" parent="."]
position = Vector2(900, 650)

[node name="Raft" type="Node2D" parent="RightSide"]

[node name="Base" type="StaticBody2D" parent="RightSide/Raft"]

[node name="Sprite2D" type="Sprite2D" parent="RightSide/Raft/Base"]
texture = SubResource("NoiseTexture2D_bouuv")

[node name="CollisionShape2D" type="CollisionShape2D" parent="RightSide/Raft/Base"]
shape = SubResource("RectangleShape2D_4ijq5")

[node name="Base2" type="StaticBody2D" parent="RightSide/Raft"]
position = Vector2(63, -53)
rotation = -1.21649

[node name="Sprite2D" type="Sprite2D" parent="RightSide/Raft/Base2"]
texture = SubResource("NoiseTexture2D_bouuv")

[node name="CollisionShape2D" type="CollisionShape2D" parent="RightSide/Raft/Base2"]
shape = SubResource("RectangleShape2D_4ijq5")

[node name="RightTeam" type="Node2D" parent="RightSide"]

[node name="TestBody" type="RigidBody2D" parent="RightSide/RightTeam"]
position = Vector2(-1, -43)
mass = 100.0
linear_damp = 3.0

[node name="Sprite2D" type="Sprite2D" parent="RightSide/RightTeam/TestBody"]
scale = Vector2(-1, 1)
texture = ExtResource("2_b7e2c")

[node name="CollisionShape2D" type="CollisionShape2D" parent="RightSide/RightTeam/TestBody"]
shape = SubResource("CircleShape2D_6flcf")
debug_color = Color(0, 0.6, 0.701961, 0.419608)

[node name="Projectiles" type="Node2D" parent="."]

[node name="BallBase" type="Node2D" parent="Projectiles"]
script = SubResource("GDScript_otvvk")
team_manager_path = NodePath("../../TeamManager")
projectile_path = NodePath("Ball")

[node name="Ball" type="RigidBody2D" parent="Projectiles/BallBase"]
process_mode = 4
position = Vector2(310, 342)
mass = 10.0
sleeping = true
freeze_mode = 1
max_contacts_reported = 1
contact_monitor = true
script = SubResource("GDScript_gs4hj")
decay_rate = 1.5

[node name="VisibleOnScreenEnabler2D" type="VisibleOnScreenEnabler2D" parent="Projectiles/BallBase/Ball"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Projectiles/BallBase/Ball"]
shape = SubResource("CircleShape2D_rwfrv")

[node name="Sprite2D" type="Sprite2D" parent="Projectiles/BallBase/Ball"]
texture_filter = 1
texture = SubResource("GradientTexture2D_vjx8b")

[node name="BeamBase" type="Node2D" parent="Projectiles"]

[node name="ArrowBase" type="Node2D" parent="Projectiles"]

[node name="Terrain" type="Node2D" parent="."]

[node name="UI" type="Control" parent="."]
layout_mode = 3
anchors_preset = 10
anchor_right = 1.0
grow_horizontal = 2

[node name="VBoxContainer" type="VBoxContainer" parent="UI"]
layout_mode = 0
offset_right = 1200.0
offset_bottom = 81.0

[node name="CenterContainer" type="CenterContainer" parent="UI/VBoxContainer"]
layout_mode = 2

[node name="ProgressBar" type="ProgressBar" parent="UI/VBoxContainer/CenterContainer"]
custom_minimum_size = Vector2(240, 0)
layout_mode = 2
max_value = 1.0
step = 0.0

[node name="ActionBar" type="HFlowContainer" parent="UI/VBoxContainer"]
layout_mode = 2
theme_override_constants/h_separation = 10
theme_override_constants/v_separation = 10
alignment = 1
script = ExtResource("3_0wwxe")
commands_nodepath = NodePath("../../../Projectiles")

[node name="Button" type="Button" parent="UI/VBoxContainer/ActionBar"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Ball Base"

[node name="Button2" type="Button" parent="UI/VBoxContainer/ActionBar"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Ball Base"

[node name="Button3" type="Button" parent="UI/VBoxContainer/ActionBar"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Ball Base"

[node name="Button4" type="Button" parent="UI/VBoxContainer/ActionBar"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Ball Base"

[node name="Button5" type="Button" parent="UI/VBoxContainer/ActionBar"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Ball Base"

[node name="Button6" type="Button" parent="UI/VBoxContainer/ActionBar"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_font_sizes/font_size = 30
text = "Ball Base"
